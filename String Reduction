import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'stringReduction' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int stringReduction(String s) {
    // Write your code here
        int counts [] = new int[3];
        for(char ch : s.toCharArray()){
            if(ch == 'a'){
                counts[0]++;
            }
            else if(ch == 'b'){
                counts[1]++;
            }
            else if(ch == 'c'){
                counts[2]++;
            }
        }
        if(counts[0] == s.length()||counts[1] == s.length()||counts[2] == s.length()){
            return s.length();
        }
        if ((counts[0] % 2 == 0 && counts[1] % 2 == 1 && counts[2] % 2 == 1) ||
            (counts[0] % 2 == 1 && counts[1] % 2 == 0 && counts[2] % 2 == 1) ||
            (counts[0] % 2 == 1 && counts[1] % 2 == 1 && counts[2] % 2 == 0)||
                (counts[0] % 2 == 1 && counts[1] % 2 == 0 && counts[2] % 2 == 0) ||
            (counts[0] % 2 == 0 && counts[1] % 2 == 1 && counts[2] % 2 == 0) ||
            (counts[0] % 2 == 0 && counts[1] % 2 == 0 && counts[2] % 2 == 1)) {
            return 1;
        }
             return 2;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, t).forEach(tItr -> {
            try {
                String s = bufferedReader.readLine();

                int result = Result.stringReduction(s);

                bufferedWriter.write(String.valueOf(result));
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.close();
    }
}
